{"version":3,"sources":["../lib/transform.js"],"names":["transform","createTransformer","template","source","data","Map","result","Object","keys","key","node","value","context","call"],"mappings":";;;;;QAMgBA,S,GAAAA,S;QA0BAC,iB,GAAAA,iB;AAhChB;;;;;;AAMO,SAASD,SAAT,GAAiE;AAAA,MAA9CE,QAA8C,yDAAnC,EAAmC;AAAA,MAA/BC,MAA+B,yDAAtB,EAAsB;AAAA,MAAlBC,IAAkB,yDAAX,IAAIC,GAAJ,EAAW;;AACtE,MAAIC,SAAS,EAAb;;AADsE;AAAA;AAAA;;AAAA;AAGtE,yBAAgBC,OAAOC,IAAP,CAAYN,QAAZ,CAAhB,8HAAuC;AAAA,UAA9BO,GAA8B;;AACrC,UAAIC,OAAOR,SAASO,GAAT,CAAX;AACA,UAAIE,QAAQR,OAAOM,GAAP,CAAZ;;AAEA,UAAIG,UAAU;AACZV,0BADY;AAEZC;AAFY,OAAd;;AAKA,UAAI,OAAOO,IAAP,KAAgB,UAApB,EAAgC;AAC9BA,aAAKG,IAAL,CAAUD,OAAV,EAAmBD,KAAnB,EAA0BL,MAA1B,EAAkCG,GAAlC,EAAuCL,IAAvC;AACD,OAFD,MAEO;AACLE,eAAOG,GAAP,IAAcT,UAAUU,IAAV,EAAgBC,KAAhB,EAAuBP,IAAvB,CAAd;AACD;AACF;AAjBqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBtE,SAAOE,MAAP;AACD;;AAED;;;;AAIO,SAASL,iBAAT,CAA2BC,QAA3B,EAAqC;AAC1C,SAAO;AAAA,WAAUF,UAAUE,QAAV,EAAoBC,MAApB,CAAV;AAAA,GAAP;AACD","file":"transform.js","sourcesContent":["/**\n * @param {Object} template\n * @param {Object} source\n * @param {Map} data\n * @returns {Object}\n */\nexport function transform(template = {}, source = {}, data = new Map()) {\n  let result = {};\n\n  for (let key of Object.keys(template)) {\n    let node = template[key];\n    let value = source[key];\n\n    let context = {\n      template,\n      source\n    };\n\n    if (typeof node === 'function') {\n      node.call(context, value, result, key, data);\n    } else {\n      result[key] = transform(node, value, data);\n    }\n  }\n\n  return result;\n}\n\n/**\n * @param {Object} template\n * @returns {Function}\n */\nexport function createTransformer(template) {\n  return source => transform(template, source);\n}\n"]}